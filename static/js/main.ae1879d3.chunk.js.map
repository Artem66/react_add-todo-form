{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","maxId","getAllIds","Math","max","App","useState","setToDo","selectedNameId","setSelectedNameId","todosFromServer","setTodoList","isTitleEmpty","setIsTitleEmpty","isSelectEmpty","setIsSelectEmpty","todoId","setTodoId","concatTodoUsers","todoFromTodos","usersFromServer","find","action","method","onSubmit","event","preventDefault","isTodoEmpty","isSelectName","htmlFor","type","value","onChange","target","replace","length","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae1879d3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user?: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\n// import usersFromServer from '../../api/users';\nimport { TodosList } from '../../types/TodoList';\n// import { User } from '../../types/User';\n\ntype Props = {\n  todo: TodosList,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  // const found = (userId:number) => {\n  //   return usersFromServer.find(user => user.id === userId)\n  //   || usersFromServer[0];\n  // };\n\n  // console.log('info', userInfo);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo',\n        {\n          'TodoInfo--completed': todo.completed,\n        })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { TodosList } from '../../types/TodoList';\n\ntype Props = {\n  todos: TodosList[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          todo={todo}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { TodosList } from './types/TodoList';\n// import { TodoListWithUsers } from './types/TodoListWithUsers';\n\nconst maxId = (...todos: TodosList[]) => {\n  const getAllIds = todos.map(todo => {\n    return todo.id;\n  });\n\n  return Math.max(...getAllIds);\n};\n\nexport const App: React.FC = () => {\n  const [todo, setToDo] = useState('');\n  const [selectedNameId, setSelectedNameId] = useState(0);\n  const [todos, setTodoList] = useState([...todosFromServer]);\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\n  const [isSelectEmpty, setIsSelectEmpty] = useState(false);\n  const [todoId, setTodoId] = useState(maxId(...todos));\n  // const [todosWithUsers, setTodosWithUsers] = useState([]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setToDo(\n      event.target.value.replace(/[^a-zA-Za-åa-ö-w-я 0-9_]/gi, ''),\n    );\n\n    if (event.target.value.length > 0) {\n      setIsTitleEmpty(false);\n    }\n  };\n\n  // eslint-disable-next-line max-len\n  const concatTodoUsers = todos.map(todoFromTodos => ({\n    ...todoFromTodos,\n    user: usersFromServer.find(user => user.id === todoFromTodos.userId),\n  }));\n\n  // console.log(concatTodoUsers);\n\n  const handleChangeSlect = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSelectedNameId(+event.target.value);\n\n    if ((+event.target.value) > 0) {\n      setIsSelectEmpty(false);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const isTodoEmpty = todo !== '';\n    const isSelectName = selectedNameId > 0;\n\n    if (isTodoEmpty && isSelectName) {\n      setTodoList([...todos, {\n        id: todoId + 1,\n        title: todo,\n        completed: false,\n        userId: +selectedNameId,\n      }]);\n\n      setTodoId(todoId + 1);\n      setToDo('');\n      setSelectedNameId(0);\n    }\n\n    if (!isSelectName) {\n      setIsSelectEmpty(true);\n    }\n\n    if (!isTodoEmpty) {\n      setIsTitleEmpty(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            value={todo}\n            onChange={handleChange}\n            placeholder=\"Enter a title\"\n          />\n\n          {isTitleEmpty && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"usernames\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            value={selectedNameId}\n            onChange={handleChangeSlect}\n            name=\"usernames\"\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {isSelectEmpty && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={concatTodoUsers} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}